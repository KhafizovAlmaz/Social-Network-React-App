{"version":3,"file":"static/js/365.96816734.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Settings/Settings.module.css?96b0","components/Settings/Settings.jsx","components/Settings/SettingsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Settings_item__5fm1S\",\"ava\":\"Settings_ava__0AlJi\"};","import s from \"./Settings.module.css\"\r\nimport React from \"react\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport * as yup from \"yup\";\r\nimport {Field, Form, Formik} from \"formik\";\r\n\r\nconst InfoDataForm = ({onSubmit,initialValues}) => {\r\n    const validationsSchema = yup.object().shape({\r\n       // email: yup.string().email('Invalid email').min(2, \"Must be longer than 2 characters\")\r\n       //     .required('Required'),\r\n       // password: yup.string().min(8, \"Must be longer than 8 characters\").typeError('').required('Required')\r\n    })\r\n    return <div>\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validateOnBlur\r\n           onSubmit={onSubmit}\r\n            validationSchema={validationsSchema}\r\n        >\r\n            {({values,errors,touched,handleChange,handleBlur,\r\n                  isValid,handleSubmit,dirty}) => (<Form>\r\n                <div>\r\n                    <label htmlFor='fullName'>Full name: </label>\r\n                    <Field component={`input`} value={values.fullName} placeholder=\"\" name='fullName' onChange={handleChange}\r\n                                    onBlur={handleBlur}  />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='aboutMe'>About me: </label>\r\n                    <Field component={`textarea`} value={values.aboutMe} placeholder=\"\" name='aboutMe' onChange={handleChange}\r\n                           onBlur={handleBlur}  />\r\n                </div>\r\n                 <br/>\r\n                Contacts\r\n                <div>\r\n                    <label htmlFor='contacts.facebook'>Facebook: </label>\r\n                    <Field component={`input`}   name='contacts.facebook' onChange={handleChange}\r\n                           onBlur={handleBlur}  />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"contacts.website\">Website: </label>\r\n                    <Field  component={`input`}  name='contacts.website' onChange={handleChange}\r\n                           onBlur={handleBlur}  />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='contacts.vk'>VK: </label>\r\n                    <Field component={`input`}  name='contacts.vk' onChange={handleChange}\r\n                           onBlur={handleBlur}  />\r\n                </div>\r\n                <div>\r\n                    Twitter:<Field component={`input`}  name='contacts.twitter' onChange={handleChange}\r\n                           onBlur={handleBlur}  />\r\n                </div>\r\n                <div>\r\n                    Instagram:<Field component={`input`}  name='contacts.instagram' onChange={handleChange}\r\n                           onBlur={handleBlur}  />\r\n                </div>\r\n                <div>\r\n                    YouTube:<Field component={`input`}  name='contacts.youtube' onChange={handleChange}\r\n                           onBlur={handleBlur}  />\r\n                </div>\r\n                <div>\r\n                    GitHub:<Field component={`input`} name='contacts.github' onChange={handleChange}\r\n                           onBlur={handleBlur}  />\r\n                </div>\r\n                <div>\r\n                    MainLink:<Field component={`input`}  name='contacts.mainLink' onChange={handleChange}\r\n                           onBlur={handleBlur}  />\r\n                </div>\r\n                <div>\r\n                    Lookin for a job:<Field component={\"input\"} name={\"lookingForAJob\"} type=\"checkbox\"/>\r\n                </div>\r\n                <div>\r\n                    My skills:<Field component={`textarea`}  name='lookingForAJobDescription' onChange={handleChange}\r\n                                    onBlur={handleBlur}  />\r\n                </div>\r\n\r\n                <div>\r\n                    <button  onClick={handleSubmit} type={'submit'}>Save</button>\r\n                </div>\r\n                <div >\r\n                    {values.general ? <span>{values.general}</span>: null}\r\n                </div>\r\n            </Form>)}\r\n\r\n        </Formik>\r\n    </div>\r\n}\r\n\r\nconst Settings = (props) => {\r\n    let onSubmit = (formData,{setFieldValue}) => {\r\n       // console.log(formData)\r\n        props.saveProfile(formData, setFieldValue)\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length != null) {\r\n            props.uploadPhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.item}>\r\n            <div >\r\n                <h3>General Settings</h3>\r\n            </div>\r\n            <div >\r\n                <h4>User photo</h4>\r\n            </div>\r\n            <div className={s.ava}>\r\n                <img src={props.profile.photos.large || userPhoto}/>\r\n            </div>\r\n            <div>\r\n                <input type=\"file\" onChange={onMainPhotoSelected}/>\r\n            </div>\r\n            <div>\r\n                <h4>Info data</h4>\r\n            </div>\r\n            <InfoDataForm onSubmit={onSubmit} initialValues={props.profile}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport Settings from \"./Settings\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {getUserProfile, saveProfile, uploadPhoto} from \"../../redux/profile-reducer\";\r\n\r\n\r\nconst SettingsContainer = (props) => {\r\n    return (\r\n        <Settings profile={props.profile}\r\n                  uploadPhoto={props.uploadPhoto}\r\n                  saveProfile={props.saveProfile}\r\n        />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    authorizedUserId: state.auth.userId,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{uploadPhoto,saveProfile,getUserProfile}),\r\n   withAuthRedirect\r\n) (SettingsContainer)"],"names":["InfoDataForm","onSubmit","initialValues","validationsSchema","yup","shape","validateOnBlur","validationSchema","values","handleChange","errors","touched","handleBlur","handleSubmit","isValid","dirty","htmlFor","component","value","fullName","placeholder","name","onChange","onBlur","aboutMe","type","onClick","general","props","className","s","src","profile","photos","large","userPhoto","e","target","files","length","uploadPhoto","formData","setFieldValue","saveProfile","compose","connect","state","profilePage","authorizedUserId","auth","userId","getUserProfile","withAuthRedirect"],"sourceRoot":""}